# 一般的なドキュメントサイト用設定
# GitBook、Sphinx、VuePressなどの一般的なドキュメントサイトに対応

# 対象サイトの設定
target_site:
  # 処理の起点となるURL（例：APIドキュメント）
  start_url: "https://example.com/docs/introduction"
  # クロールを許可するURLのパターン
  allowed_domain: "https://example.com/docs/"

# クロール設定
crawler:
  # 一般的なナビゲーション構造に対応
  # 以下のセレクターを試してください：
  # - ".toctree-wrapper"     (Sphinx)
  # - ".sidebar"             (GitBook)
  # - ".sidebar-nav"         (VuePress)
  # - "nav"                  (汎用)
  navigation_selector: "nav"
  
  # 除外したいURLのパターン
  exclude_patterns:
    - ".*#.*"                # アンカーリンクを除外
    - ".*/search.*"          # 検索関連ページを除外
    - ".*/404\.html"         # エラーページを除外
    - ".*\.pdf$"             # PDFファイルを除外
    - ".*\.zip$"             # アーカイブファイルを除外
    - ".*/edit.*"            # 編集ページを除外

# コンテンツ抽出設定
extractor:
  # 一般的なメインコンテンツ領域のセレクター
  # 以下のセレクターを試してください：
  # - "main"                 (HTML5セマンティック)
  # - ".content"             (汎用)
  # - ".main-content"        (汎用)
  # - "div[role='main']"     (ARIA)
  # - ".markdown-body"       (GitHub Pages)
  content_selector: "main"

# 出力設定
output:
  # Markdownファイルを保存するベースディレクトリ
  base_dir: "./output/docs"
  # ダウンロードした画像を保存するディレクトリ
  image_dir_name: "images"
  # 画像をダウンロードするかどうか
  download_images: true

# 実行設定
execution:
  # 各リクエスト間の待機時間（秒）
  # 一般的なサーバーに配慮した設定
  request_delay: 2.0